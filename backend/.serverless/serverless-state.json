{
  "service": {
    "service": "serverless-udagram-app",
    "serviceObject": {
      "name": "serverless-udagram-app"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "region": "us-east-2",
      "tracing": {
        "lambda": true,
        "apiGateway": true
      },
      "environment": {
        "GROUPS_TABLE": "Groups-dev",
        "FEEDS_TABLE": "Feeds-dev",
        "IMAGE_ID_INDEX": "ImageIdIndex",
        "CONNECTIONS_TABLE": "Connections-dev",
        "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
        "SIGNED_URL_EXPIRATION": 300,
        "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
        "BUCKET_REGION": "us-east-2",
        "IS_OFFLINE": "False"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::serverless-udagram-sing-thumbnail-dev/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::serverless-udagram-sing-images-dev/*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "xray:PutTraceSegments"
          ],
          "Resource": [
            "*"
          ]
        },
        {
          "Effect": "Allow",
          "Action": [
            "codedeploy:*"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "RS256AuthLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-RS256Auth"
            }
          },
          "GetGroupsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-GetGroups"
            }
          },
          "GetFeedsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-GetFeeds"
            }
          },
          "CreateFeedLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-CreateFeed"
            }
          },
          "ResizeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-udagram-app-dev-Resize"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-udagram-app",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords"
                        ],
                        "Resource": [
                          "*"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-udagram-app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "RS256AuthLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z/RS256Auth.zip"
              },
              "FunctionName": "serverless-udagram-app-dev-RS256Auth",
              "Handler": "src/lambda/auth/rs256Auth0Authorizer.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Groups-dev",
                  "FEEDS_TABLE": "Feeds-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
                  "BUCKET_REGION": "us-east-2",
                  "IS_OFFLINE": "False"
                }
              }
            },
            "DependsOn": [
              "RS256AuthLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "RS256AuthLambdaVersionuU48sesJ7XMIrUEjeqZDInyqTo5yKwzODqg9zZzqA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RS256AuthLambdaFunction"
              },
              "CodeSha256": "oB8pbCEp4v9k8HHcvuNapBlqkWV4YbYQKqICHgqnQxk="
            }
          },
          "GetGroupsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z/GetGroups.zip"
              },
              "FunctionName": "serverless-udagram-app-dev-GetGroups",
              "Handler": "src/lambda/http/getGroups.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "GetGroupsIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Groups-dev",
                  "FEEDS_TABLE": "Feeds-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
                  "BUCKET_REGION": "us-east-2",
                  "IS_OFFLINE": "False"
                }
              }
            },
            "DependsOn": [
              "GetGroupsIamRoleLambdaExecution",
              "GetGroupsLogGroup"
            ]
          },
          "GetGroupsLambdaVersionz67t4JPAedscy2LVY8B0kINbxnRKXJUXQ8UaHKWqM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetGroupsLambdaFunction"
              },
              "CodeSha256": "VERmODX8kEfnPbRXZR4JbeTU3263n5X0ZyelnilRTrY="
            }
          },
          "GetFeedsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z/GetFeeds.zip"
              },
              "FunctionName": "serverless-udagram-app-dev-GetFeeds",
              "Handler": "src/lambda/http/getFeeds.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "GetFeedsIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Groups-dev",
                  "FEEDS_TABLE": "Feeds-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
                  "BUCKET_REGION": "us-east-2",
                  "IS_OFFLINE": "False"
                }
              }
            },
            "DependsOn": [
              "GetFeedsIamRoleLambdaExecution",
              "GetFeedsLogGroup"
            ]
          },
          "GetFeedsLambdaVersionlgkwTa9FLXjzwwXT9FVqQQrnIUXZz2UGcgCComV6f9E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetFeedsLambdaFunction"
              },
              "CodeSha256": "GhzySe8tu20ce/setP6AfdMmXHG2vYJFef3HMCbFFaw="
            }
          },
          "CreateFeedLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z/CreateFeed.zip"
              },
              "FunctionName": "serverless-udagram-app-dev-CreateFeed",
              "Handler": "src/lambda/http/createFeed.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "CreateFeedIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Groups-dev",
                  "FEEDS_TABLE": "Feeds-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
                  "BUCKET_REGION": "us-east-2",
                  "IS_OFFLINE": "False"
                }
              }
            },
            "DependsOn": [
              "CreateFeedIamRoleLambdaExecution",
              "CreateFeedLogGroup"
            ]
          },
          "CreateFeedLambdaVersionugX3VFPkPeS8mzZffmCWpIYAer66zFDXTrUbBcB0X4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateFeedLambdaFunction"
              },
              "CodeSha256": "jr3tIaWfrxxqUAyDBXKiszxuWQ94OSYYRm742755RmA="
            }
          },
          "ResizeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z/Resize.zip"
              },
              "FunctionName": "serverless-udagram-app-dev-Resize",
              "Handler": "src/lambda/s3/resizeImage.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "ResizeIamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "TracingConfig": {
                "Mode": "Active"
              },
              "Environment": {
                "Variables": {
                  "GROUPS_TABLE": "Groups-dev",
                  "FEEDS_TABLE": "Feeds-dev",
                  "IMAGE_ID_INDEX": "ImageIdIndex",
                  "CONNECTIONS_TABLE": "Connections-dev",
                  "IMAGES_S3_BUCKET": "serverless-udagram-sing-images-dev",
                  "SIGNED_URL_EXPIRATION": 300,
                  "THUMBNAILS_S3_BUCKET": "serverless-udagram-sing-thumbnail-dev",
                  "BUCKET_REGION": "us-east-2",
                  "IS_OFFLINE": "False"
                }
              }
            },
            "DependsOn": [
              "ResizeIamRoleLambdaExecution",
              "ResizeLogGroup"
            ]
          },
          "ResizeLambdaVersionXVqIXZgNJPAS1YcBECUgL4U5lPicPAx1Gn9GnEbT8gQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ResizeLambdaFunction"
              },
              "CodeSha256": "efEcUxJbfr8xgPIc3cCll7WlEi9Ry+CrJKPknRB/F2s="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-udagram-app",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceGroups": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "groups",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGroupsGroupidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "PathPart": "{groupId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceGroupsGroupidVarFeeds": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVar"
              },
              "PathPart": "feeds",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsGroupidVarFeedsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": "#set($origin = $input.params(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params(\"origin\")) #end\n#if($origin.matches(\".*\")) #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin) #end"
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarFeeds"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGroupsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroups"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetGroupsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGroupsGroupidVarFeedsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarFeeds"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetFeedsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodGroupsGroupidVarFeedsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGroupsGroupidVarFeeds"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "RS256AuthApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateFeedLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "RequestBodyValidator"
              },
              "RequestModels": {
                "application/json": "FeedRequest"
              }
            },
            "DependsOn": [
              "FeedRequestModel"
            ]
          },
          "RS256AuthApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "IdentitySource": "method.request.header.Authorization",
              "Name": "RS256Auth",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "RS256AuthLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1578143403663": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGroupsOptions",
              "ApiGatewayMethodGroupsGroupidVarFeedsOptions",
              "ApiGatewayMethodGroupsGet",
              "ApiGatewayMethodGroupsGroupidVarFeedsGet",
              "ApiGatewayMethodGroupsGroupidVarFeedsPost"
            ]
          },
          "GetGroupsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetGroupsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetFeedsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetFeedsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateFeedLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateFeedLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "RS256AuthLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RS256AuthLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com"
            }
          },
          "ResizeSnsSubscriptionImagesTopicdev": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
              "TopicArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "Protocol": "lambda",
              "Endpoint": {
                "Fn::GetAtt": [
                  "ResizeLambdaFunction",
                  "Arn"
                ]
              }
            }
          },
          "ResizeLambdaPermissionImagesTopicdevSNS": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ResizeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              }
            }
          },
          "GroupRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Name": "GroupRequest",
              "Schema": {}
            }
          },
          "FeedRequestModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GroupRequestModel\"][\"Properties\"][\"RestApiId\"]"
              },
              "ContentType": "application/json",
              "Name": "FeedRequest",
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "title": "image",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "title",
                  "description"
                ],
                "additionalProperties": false
              }
            }
          },
          "GetGroupsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-udagram-app",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev-GetGroups:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Scan"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-2:*:table/Groups-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-udagram-app",
                    "dev",
                    "GetGroups",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetFeedsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-udagram-app",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev-GetFeeds:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Scan"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-2:*:table/Feeds-dev"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:Query"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-2:*:table/Feeds-dev/index/ImageIdIndex"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-udagram-app",
                    "dev",
                    "GetFeeds",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "CreateFeedIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-udagram-app",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev-CreateFeed:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-2:*:table/Feeds-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-udagram-app",
                    "dev",
                    "CreateFeed",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "ResizeIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "serverless-udagram-app",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-udagram-app-dev-Resize:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][1]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][2]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][3]"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:UpdateItem"
                        ],
                        "Resource": "arn:aws:dynamodb:us-east-2:*:table/Feeds-dev"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-udagram-app",
                    "dev",
                    "Resize",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GatewayResponseDefault4XX": {
            "Type": "AWS::ApiGateway::GatewayResponse",
            "Properties": {
              "ResponseParameters": {
                "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
                "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
              },
              "ResponseType": "DEFAULT_4XX",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "GroupsDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "Groups-dev"
            }
          },
          "FeedsDynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "groupId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "timestamp",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "imageId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "groupId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "timestamp",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "StreamSpecification": {
                "StreamViewType": "NEW_IMAGE"
              },
              "TableName": "Feeds-dev",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "ImageIdIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "imageId",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "RequestBodyValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "Name": "request-body-validator",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": false
            }
          },
          "S3BucketPhotos": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": [
              "ImagesTopicPolicy"
            ],
            "Properties": {
              "BucketName": "serverless-udagram-sing-images-dev",
              "NotificationConfiguration": {
                "TopicConfigurations": [
                  {
                    "Event": "s3:ObjectCreated:Put",
                    "Topic": {
                      "Ref": "ImagesTopic"
                    }
                  }
                ]
              },
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "PUT",
                      "POST",
                      "DELETE",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "MyPolicy",
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetBucketObjects",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "s3:GetObject",
                    "Resource": "arn:aws:s3:::serverless-udagram-sing-images-dev/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "S3BucketPhotos"
              }
            }
          },
          "ResizePhotosBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "PolicyDocument": {
                "Id": "MyPolicy",
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PublicReadForGetResizePhotosBucketObjects",
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": [
                      "s3:GetObject",
                      "s3:PutObject"
                    ],
                    "Resource": "arn:aws:s3:::serverless-udagram-sing-thumbnail-dev/*"
                  }
                ]
              },
              "Bucket": {
                "Ref": "S3BucketResizePhotos"
              }
            }
          },
          "S3BucketResizePhotos": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "serverless-udagram-sing-thumbnail-dev"
            }
          },
          "ResizePermissionResizePhotosS3": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Ref": "ResizeLambdaFunction"
              },
              "Principal": "s3.amazonaws.com",
              "Action": "lambda:InvokeFunction",
              "SourceAccount": {
                "Ref": "AWS::AccountId"
              },
              "SourceArn": "arn:aws:s3:::serverless-udagram-sing-thumbnail-dev"
            }
          },
          "ImagesTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
              "DisplayName": "Image bucket topic",
              "TopicName": "imagesTopic-dev"
            }
          },
          "ImagesTopicPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "DependsOn": [
              "ImagesTopic"
            ],
            "Properties": {
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "AllowServerlessFrameworkEnterpriseToPublish",
                    "Effect": "Allow",
                    "Principal": {
                      "AWS": "*"
                    },
                    "Action": "sns:Publish",
                    "Resource": {
                      "Ref": "ImagesTopic"
                    }
                  }
                ]
              },
              "Topics": [
                {
                  "Ref": "ImagesTopic"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "RS256AuthLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RS256AuthLambdaVersionuU48sesJ7XMIrUEjeqZDInyqTo5yKwzODqg9zZzqA"
            }
          },
          "GetGroupsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetGroupsLambdaVersionz67t4JPAedscy2LVY8B0kINbxnRKXJUXQ8UaHKWqM"
            }
          },
          "GetFeedsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetFeedsLambdaVersionlgkwTa9FLXjzwwXT9FVqQQrnIUXZz2UGcgCComV6f9E"
            }
          },
          "CreateFeedLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateFeedLambdaVersionugX3VFPkPeS8mzZffmCWpIYAer66zFDXTrUbBcB0X4"
            }
          },
          "ResizeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ResizeLambdaVersionXVqIXZgNJPAS1YcBECUgL4U5lPicPAx1Gn9GnEbT8gQ"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          },
          "AwsDocApiId": {
            "Description": "API ID",
            "Value": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GroupRequestModel\"][\"Properties\"][\"RestApiId\"]"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "./webpack.config.js",
        "includeModules": true
      },
      "documentation": {
        "api": {
          "info": {
            "version": "v1.0.0",
            "title": "Udagram API",
            "description": "Serverless application for images sharing"
          }
        },
        "models": [
          {
            "name": "GroupRequest",
            "contentType": "application/json"
          },
          {
            "name": "FeedRequest",
            "contentType": "application/json",
            "schema": {
              "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"FeedRequestModel\"][\"Properties\"][\"Schema\"]"
            }
          }
        ]
      },
      "topicName": "imagesTopic-dev"
    },
    "plugins": [
      "serverless-webpack",
      "serverless-reqvalidator-plugin",
      "serverless-aws-documentation",
      "serverless-plugin-canary-deployments",
      "serverless-iam-roles-per-function",
      "serverless-dynamodb-local",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "RS256Auth": {
        "handler": "src/lambda/auth/rs256Auth0Authorizer.handler",
        "events": [],
        "name": "serverless-udagram-app-dev-RS256Auth",
        "package": {
          "artifact": ".serverless/RS256Auth.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "GetGroups": {
        "handler": "src/lambda/http/getGroups.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "groups",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetGroupsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5]"
          }
        ],
        "name": "serverless-udagram-app-dev-GetGroups",
        "package": {
          "artifact": ".serverless/GetGroups.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "GetFeeds": {
        "handler": "src/lambda/http/getFeeds.handler",
        "events": [
          {
            "http": {
              "method": "get",
              "path": "groups/{groupId}/feeds",
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetFeedsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetFeedsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][6]"
          }
        ],
        "name": "serverless-udagram-app-dev-GetFeeds",
        "package": {
          "artifact": ".serverless/GetFeeds.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "CreateFeed": {
        "handler": "src/lambda/http/createFeed.handler",
        "events": [
          {
            "http": {
              "method": "post",
              "path": "groups/{groupId}/feeds",
              "authorizer": {
                "name": "RS256Auth",
                "arn": {
                  "Fn::GetAtt": [
                    "RS256AuthLambdaFunction",
                    "Arn"
                  ]
                },
                "identitySource": "method.request.header.Authorization"
              },
              "cors": {
                "origins": [
                  "*"
                ],
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "reqValidatorName": "RequestBodyValidator",
              "documentation": {
                "summary": "Create a new Feed",
                "description": "Create a new Feed",
                "requestModels": {
                  "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodGroupsGroupidVarFeedsPost\"][\"Properties\"][\"RequestModels\"]"
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"CreateFeedIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5]"
          }
        ],
        "name": "serverless-udagram-app-dev-CreateFeed",
        "package": {
          "artifact": ".serverless/CreateFeed.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "Resize": {
        "handler": "src/lambda/s3/resizeImage.handler",
        "events": [
          {
            "sns": {
              "arn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn:aws:sns",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    "imagesTopic-dev"
                  ]
                ]
              },
              "topicName": "imagesTopic-dev"
            }
          }
        ],
        "iamRoleStatementsInherit": true,
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ResizeIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][5]"
          }
        ],
        "name": "serverless-udagram-app-dev-Resize",
        "package": {
          "artifact": ".serverless/Resize.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "GatewayResponseDefault4XX": {
          "Type": "AWS::ApiGateway::GatewayResponse",
          "Properties": {
            "ResponseParameters": {
              "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
              "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
              "gatewayresponse.header.Access-Control-Allow-Methods": "'GET,OPTIONS,POST'"
            },
            "ResponseType": "DEFAULT_4XX",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "GroupsDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "Groups-dev"
          }
        },
        "FeedsDynamoDBTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "groupId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "timestamp",
                "AttributeType": "S"
              },
              {
                "AttributeName": "imageId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "groupId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "timestamp",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "StreamSpecification": {
              "StreamViewType": "NEW_IMAGE"
            },
            "TableName": "Feeds-dev",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "ImageIdIndex",
                "KeySchema": [
                  {
                    "AttributeName": "imageId",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "RequestBodyValidator": {
          "Type": "AWS::ApiGateway::RequestValidator",
          "Properties": {
            "Name": "request-body-validator",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ValidateRequestBody": true,
            "ValidateRequestParameters": false
          }
        },
        "S3BucketPhotos": {
          "Type": "AWS::S3::Bucket",
          "DependsOn": [
            "ImagesTopicPolicy"
          ],
          "Properties": {
            "BucketName": "serverless-udagram-sing-images-dev",
            "NotificationConfiguration": {
              "TopicConfigurations": [
                {
                  "Event": "s3:ObjectCreated:Put",
                  "Topic": {
                    "Ref": "ImagesTopic"
                  }
                }
              ]
            },
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "PUT",
                    "POST",
                    "DELETE",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "PolicyDocument": {
              "Id": "MyPolicy",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetBucketObjects",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "s3:GetObject",
                  "Resource": "arn:aws:s3:::serverless-udagram-sing-images-dev/*"
                }
              ]
            },
            "Bucket": {
              "Ref": "S3BucketPhotos"
            }
          }
        },
        "ResizePhotosBucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "PolicyDocument": {
              "Id": "MyPolicy",
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PublicReadForGetResizePhotosBucketObjects",
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject"
                  ],
                  "Resource": "arn:aws:s3:::serverless-udagram-sing-thumbnail-dev/*"
                }
              ]
            },
            "Bucket": {
              "Ref": "S3BucketResizePhotos"
            }
          }
        },
        "S3BucketResizePhotos": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "serverless-udagram-sing-thumbnail-dev"
          }
        },
        "ResizePermissionResizePhotosS3": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Ref": "ResizeLambdaFunction"
            },
            "Principal": "s3.amazonaws.com",
            "Action": "lambda:InvokeFunction",
            "SourceAccount": {
              "Ref": "AWS::AccountId"
            },
            "SourceArn": "arn:aws:s3:::serverless-udagram-sing-thumbnail-dev"
          }
        },
        "ImagesTopic": {
          "Type": "AWS::SNS::Topic",
          "Properties": {
            "DisplayName": "Image bucket topic",
            "TopicName": "imagesTopic-dev"
          }
        },
        "ImagesTopicPolicy": {
          "Type": "AWS::SNS::TopicPolicy",
          "DependsOn": [
            "ImagesTopic"
          ],
          "Properties": {
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "AllowServerlessFrameworkEnterpriseToPublish",
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": "*"
                  },
                  "Action": "sns:Publish",
                  "Resource": {
                    "Ref": "ImagesTopic"
                  }
                }
              ]
            },
            "Topics": [
              {
                "Ref": "ImagesTopic"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yml",
    "layers": {}
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-udagram-app/dev/1578143467772-2020-01-04T13:11:07.772Z",
    "artifact": ""
  }
}